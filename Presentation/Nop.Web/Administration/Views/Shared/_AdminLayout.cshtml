@using Nop.Core.Domain.Customers
@using Nop.Core.Domain.Localization
@using Nop.Web.Framework.UI;
@using Nop.Core;
@using Nop.Core.Domain.Common;
@using Nop.Services.Security;

@{
    var currentCustomer = this.WorkContext.CurrentCustomer;
    var usernamesEnabled = EngineContext.Current.Resolve<CustomerSettings>().UsernamesEnabled;
    var currentVersion = NopVersion.CurrentVersion;
    var kendoVersion = "2014.1.318";
    var supportRtl = EngineContext.Current.Resolve<IWorkContext>().WorkingLanguage.Rtl &&
        !EngineContext.Current.Resolve<LocalizationSettings>().IgnoreRtlPropertyForAdminArea;



    //CSS resources
    Html.AppendCssFileParts(string.Format("~/Content/kendo/{0}/kendo.rtl.min.css", kendoVersion));
    Html.AppendCssFileParts(string.Format("~/Content/kendo/{0}/kendo.custom.min.css", kendoVersion));

    Html.AppendCssFileParts(string.Format("~/Content/kendo/{0}/kendo.common.min.css", kendoVersion));
    Html.AppendCssFileParts("~/Content/jquery-ui-themes/smoothness/jquery-ui-1.10.3.custom.min.css");
    if (supportRtl)
    {
        Html.AppendCssFileParts("~/Administration/Content/styles.rtl.css");
    }
    else
    {
        Html.AppendCssFileParts("~/Administration/Content/styles.css");
    }

    Html.AppendScriptParts(string.Format("~/Scripts/kendo/{0}/kendo.web.min.js", kendoVersion));
    Html.AppendScriptParts("~/Scripts/admin.common.js");
    Html.AppendScriptParts("~/Scripts/jquery-migrate-1.2.1.min.js");
    Html.AppendScriptParts("~/Scripts/jquery-ui-1.10.3.custom.min.js");
    Html.AppendScriptParts("~/Scripts/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts("~/Scripts/jquery.validate.min.js");
    Html.AppendScriptParts("~/Scripts/jquery-1.10.2.min.js");

    //page title
    string adminPageTitle = "";
    if (!String.IsNullOrWhiteSpace(ViewBag.Title))
    {
        adminPageTitle = ViewBag.Title + " / ";
    }
    adminPageTitle += T("Admin.PageTitle").Text;

    //has "Manage Maintenance" permission?
    var canManageMaintenance = EngineContext.Current.Resolve<IPermissionService>()
        .Authorize(StandardPermissionProvider.ManageMaintenance);

    //X-UA-Compatible tag
    var commonSettings = EngineContext.Current.Resolve<CommonSettings>();
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\"/>", commonSettings.XuaCompatibleValue));
    }

    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}
<!DOCTYPE html>
<html @(supportRtl ? Html.Raw("dir=\"rtl\"") : null)>
<head>
    <title>@adminPageTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <link href="~/Content/jquery-ui-1.10.3.custom.min.css" rel="stylesheet" />
    @*<script src="~/Scripts/jquery-1.6.2.min.js"></script>*@
    <script src="http://localhost:15536/Scripts/jquery-1.6.2.min.js"></script>
    @Html.NopHeadCustom()
    @Html.NopCssFiles(this.Url, ResourceLocation.Head)
    @Html.NopScripts(this.Url, ResourceLocation.Head)
    @*<script src="~/Scripts/jquery.ui.datepicker-cc.all.min.js"></script>*@
    <script src="~/Scripts/jalaliDate.js"></script>
    <script src="~/Scripts/jquery.ui.datepicker-cc.all.min.js"></script>

    @*<script src="~/Scripts/jalaliDate.js"></script>*@
    <style>
        .ui-datepicker-trigger {
            width: 1.5em;
            margin-bottom: -.4em;
            cursor: pointer;
        }

        .jalaliDatePicker {
            width: 10em;
            border: 0;
            padding: .4em;
            background: transparent;
        }

        .jalaliDatePicker-span {
            padding: .3em 0;
            padding-left: .4em;
            border: 1px solid rgba(128, 128, 128, 0.31);
            border-radius: 4px;
        }

        .k-datetimepicker, .k-datepicker {
            display: none;
        }
    </style>
    <script>
    var timerCount = 0;
    var footerChangerInterval;
    function gregorianToShamsi(date) {
        var dateArrey = date.split(' ')[0].split('/');
        var shamsi = new JalaliDate2().gregorianToJalali(new Date(date).getFullYear(), new Date(date).getMonth() + 1, new Date(date).getDate());

        return shamsi.join('/') + " " + date.split(' ')[1] + " " + date.split(' ')[2];
    }

    function changeGridFooter() {
        timerCount++;
        var pagingItems = $(".k-pager-info");

        for (var i = 0; i < pagingItems.length; i++) {
            if (pagingItems[i].innerText == "No items to display") {
                pagingItems[i].innerText = "@T("admin.grid.footer.noitemstodisplay")";
            }

            var tokens = pagingItems[i].innerText.split(' ');
            for (var n = 0; n < tokens.length; n++) {
                if (tokens[n] == "of") {
                    tokens[n] = "@T("admin.grid.footer.of")";
                }
                if (tokens[n] == "items") {
                    tokens[n] = "@T("admin.grid.footer.items")";
                }
            }
            pagingItems[i].innerText = tokens.join(' ');
        }

        var sizes = $(".k-pager-sizes");

        for (var i = 0; i < sizes.length; i++) {

            if (sizes[i].childNodes[sizes[i].childNodes.length - 1].nodeValue == "items per page") {
                sizes[i].childNodes[sizes[i].childNodes.length - 1].nodeValue = "@T("admin.grid.footer.itemsperpage")";
            }
        }
        if (timerCount == 10) {
            clearInterval(footerChangerInterval);
        }
    }

    $(document).ready(function () {
        var pickers = document.getElementsByClassName("jalaliDatePicker");
        for (var i = 0; i < pickers.length; i++) {

            var textboxname = $(pickers[i]).attr('id');
            var textboxnamewithoutprefix = textboxname.substring(0, textboxname.indexOf('_EnglishDateTextbox'));
            var originValue = document.getElementById(textboxnamewithoutprefix).value.split(" ")[0];
            if (originValue != "") {
                var shamsiDate = new JalaliDate2().gregorianToJalali(originValue.split('/')[2],
                originValue.split('/')[1], originValue.split('/')[0]).join('/');
                pickers[i].value = shamsiDate;
            }
            else {
                pickers[i].value = "";
            }
        }
        $(".jalaliDatePicker").datepicker({
            showButtonPanel: true,
            showOn: 'button',
            buttonImage: '/Content/images/Calendar-2-icon.png',
            buttonImageOnly: true,
            onSelect: function (dateText, inst) {
                var date = new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']).getGregorianDate();
                var month = date.getMonth() + 1;
                if (month <= 9)
                    month = '0' + month.toString();
                var day = date.getDate();
                if (day <= 9)
                    day = '0' + day.toString();
                var textboxname = $(this).attr('id');
                var textboxnamewithoutprefix = textboxname.substring(0, textboxname.indexOf('_EnglishDateTextbox'));
                document.getElementById(textboxnamewithoutprefix).value = date.getFullYear() + '/' + month + '/' + day;
            }

        });
        jQuery('.jalaliDatePicker').on('input', function (p) {
            var date = p.target.value.trim();
            
            if (date != "") {
                date = new JalaliDate(p.target.value.split('/')[2], p.target.value.split('/')[1], p.target.value.split('/')[0]).getGregorianDate();
                var month = date.getMonth() + 1;
                if (month <= 9)
                    month = '0' + month.toString();
                var day = date.getDate();
                if (day <= 9)
                    day = '0' + day.toString();
            }
            var textboxname = $(this).attr('id');
            var textboxnamewithoutprefix = textboxname.substring(0, textboxname.indexOf('_EnglishDateTextbox'));
            document.getElementById(textboxnamewithoutprefix).value = date == "" ? "" : date.getFullYear() + '/' + month + '/' + day;
        });

        if (document.getElementById("dateTimeLabel")) {
            document.getElementById("dateTimeLabel").innerText = gregorianToShamsi("@(EngineContext.Current.Resolve<Nop.Services.Helpers.IDateTimeHelper>().ConvertToUserTime(DateTime.Now))");
        }


        if ("@supportRtl".toLowerCase() == "true") {
            footerChangerInterval = setInterval(changeGridFooter, 3000);
        }
    });


    </script>
</head>
<body @(supportRtl ? Html.Raw("class=\"k-rtl\"") : null)>
    <div id="ajaxBusy">
        <span>&nbsp;</span>
    </div>
    <div class="master-wrapper-page k-content">
        <div class="master-wrapper-content">
            @if (IsSectionDefined("header"))
            {
                @RenderSection("header")
            }
            else
            {
                <script type="text/javascript">
                    $(document).ready(function () {
                        $("#restart-application").click(function (e) {
                            showThrobber('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Admin.Header.RestartApplication.Progress").Text))');
                        });
                    });
                </script>
                <div class="header">
                    @*<div class="logo">
                        </div>*@
                    @Html.Widget("admin_header_before")
                    @*<div class="languageselector">
                            @Html.Action("LanguageSelector", "Common")
                        </div>*@
                    @Html.Widget("admin_header_middle")

                    @*<div class="login-info">
                            @if (currentCustomer != null && currentCustomer.IsRegistered())
                            {
                                @String.Format(T("Admin.Header.LoggedInAs").Text, usernamesEnabled ? currentCustomer.Username : currentCustomer.Email)
                                <text>, </text>
                                 <a href="@Url.Action("Logout", "Customer", new { area = "" }, null)">@T("Admin.Header.Logout")</a>
                            }
                        </div>*@
                    <div class="version">
                        <span>nopCommerce @currentVersion</span>
                    </div>
                    @Html.Widget("admin_header_after")
                </div>
            }
            @if (IsSectionDefined("headermenu"))
            {
                @RenderSection("headermenu")
            }
            else
            {
                <div class="header-menu">
                    @Html.Partial("Menu")
                </div>
            }
            @if (IsSectionDefined("statusbar"))
            {
                @RenderSection("statusbar")
            }
            else
            {
                <div class="status-bar">
                    <span id="dateTimeLabel">
                        @(EngineContext.Current.Resolve<Nop.Services.Helpers.IDateTimeHelper>().ConvertToUserTime(DateTime.Now).ToString("f"))
                    </span>
                    <div class="login-info">
                        @if (currentCustomer != null && currentCustomer.IsRegistered())
                        {
                            @String.Format(T("Admin.Header.LoggedInAs").Text, usernamesEnabled ? currentCustomer.Username : currentCustomer.Email)
                            <text>, </text>
                        }
                    </div>

                    <div class="languageselector">
                        @Html.Action("LanguageSelector", "Common")
                    </div>
                    <div class="links">
                        <img src="/Administration/Content/images/marker.png" class="public-store-marker" />
                        <a href="/" class="left">@T("Admin.Header.PublicStore").Text</a>
                        @*@Html.ActionLink(T("Admin.Header.PublicStore").Text, "Index", "Home", new { area = "" }, null)*@
                        @if (canManageMaintenance)
                        {
                            @*<span class="separator">|</span>*@
                            @*<a href="@webHelper.ModifyQueryString(Url.Action("ClearCache", "Common"), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null)">@T("Admin.Header.ClearCache")</a>*@
                            @*<span class="separator">|</span>*@
                            @*<a href="@webHelper.ModifyQueryString(Url.Action("RestartApplication", "Common"), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null)" id="restart-application">@T("Admin.Header.RestartApplication")</a>*@
                        }
                    </div>
                </div>
            }
            <div class="content">
                @Html.Partial("Notifications")
                <div class="cph">
                    @RenderBody()
                </div>
            </div>
            <div class="throbber">
                <div class="curtain">
                </div>
                <div class="curtain-content">
                    <div>
                        <h1 class="throbber-header">Wait...</h1>
                        <p>
                            <img src="@Url.Content("~/administration/content/images/throbber-synchronizing.gif")" alt="" />
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.NopCssFiles(this.Url, ResourceLocation.Foot)
    @Html.NopScripts(this.Url, ResourceLocation.Foot)
</body>
</html>
